app:
  keycloak:
    admin:
      clientId: spring-security-bank-api
      clientSecret: ${CLIENT_SECRET}
    realm: bank-api
    serverUrl: ${KEYCLOAK_URL}

logging:
#  file:
#    name: "./logs/bank-app.log"
  structured:
    format:
      file: gelf
  pattern:
    console: "%d - %highlight(%level) [%thread] --- %logger{30} -> %class{60} -> %green(%method) : %msg%n"
  level:
    root: warn
    com.luiz.devops: info
    #org.hibernate.sql: trace
    #org.hibernate.orm.jdbc.bind: trace
spring:
  output:
    ansi:
      enabled: always
  web:
    resources:
      add-mappings: false
  application:
    name: "Banking-app"
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update
  profiles:
    active: dev
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: spring-security-bank-api
            client-secret: ${CLIENT_SECRET}
            scope: openid, profile, email
        provider:
          keycloak:
            issuer-uri: ${app.keycloak.serverUrl}/realms/${app.keycloak.realm}
      resourceserver:
        jwt:
          issuer-uri: ${app.keycloak.serverUrl}/realms/${app.keycloak.realm}